global
    log /dev/log    local0
    log /dev/log    local1 notice

defaults
    log    global
    mode    http
    option    httplog
    option    dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000


frontend http_frontend
    bind *:80
    {{ range $service := ls "/services" }}
    {{ if ls (printf "/services/%s/upstream" $service) }}
    acl {{ $service }}_acl path_beg {{ if exists (printf "/services/%s/location" $service) }}{{ getv (printf "/services/%s/location" $service) }}{{ else }}/{{ $service }}{{ end }}
    {{ if exists (printf "/services/%s/location" $service) }}
    {{ if eq (getv (printf "/services/%s/location" $service)) "/" }}
    default_backend {{ $service }}_backend
    {{ else }}
    use_backend {{ $service }}_backend if {{ $service }}_acl
    {{ end }}
    {{ else }}
    use_backend {{ $service }}_backend if {{ $service }}_acl
    {{ end }}
    {{ end }}
    {{ end }}

{{ range $service := ls "/services" }}
{{ if ls (printf "/services/%s/upstream" $service) }}
backend {{ $service }}_backend
    {{ if ls (printf "/services/%s/backend" $service) }}
    {{ range $option := ls (printf "/services/%s/backend" $service) }}
    {{ $option }} {{ getv (printf "/services/%s/backend/%s" $service $option) }}
    {{ end }}
    {{ else }}
    balance roundrobin
    {{ end }}
    {{ range $server := ls (printf "/services/%s/upstream" $service) }}
    server {{ $server }} {{ getv (printf "/services/%s/upstream/%s" $service $server) }} check
    {{ end }}
{{ end }}
{{ end }}


listen stats 
   bind *:1936
   mode http
   stats enable
   stats scope http
   stats scope www
   stats scope static
   stats scope static_httpclose
   stats realm Haproxy\ Statistics
   stats uri /
   #stats auth haproxy:YOURPASSWORDHERE
   stats refresh 5s
